<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guide on Xiaoyun Yang</title>
    <link>http://xiaoyunyang.github.io/tags/guide/</link>
    <description>Recent content in Guide on Xiaoyun Yang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>xiaoyun@looseleafapp.com (Xiaoyun Yang)</managingEditor>
    <webMaster>xiaoyun@looseleafapp.com (Xiaoyun Yang)</webMaster>
    <lastBuildDate>Mon, 16 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://xiaoyunyang.github.io/tags/guide/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Problem Solving Using JavaScript</title>
      <link>http://xiaoyunyang.github.io/post/problem-solving-using-javascript/</link>
      <pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate>
      <author>xiaoyun@looseleafapp.com (Xiaoyun Yang)</author>
      <guid>http://xiaoyunyang.github.io/post/problem-solving-using-javascript/</guid>
      <description>&lt;p&gt;JavaScript is one of the most popular and versatile languages today, but when Brandon Eich first created JavaScript in 1995, it was not recognized as a general purpose programming language. JavaScript only ran in the browser and was primarily used to enhance the user interfaces of website (e.g., animation, effects upon hover), thus tightly coupled with the Data Object Model (DOM). In recent years, JavaScript has gotten a lot more useful as a general purpose language as it can be run independently from the DOM and browser. Additionally, JavaScript has also has gotten very sophisticated with the introduction of ES6 and ES7. With that, let&amp;rsquo;s take a look at how JavaScript can be used to solve fundamental problems in computer science. Specifically, let&amp;rsquo;s look at how to write algorithms and leverage data structures to help us solve problems using JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Everything You Need To Know About Git</title>
      <link>http://xiaoyunyang.github.io/post/everything-you-need-to-know-about-git/</link>
      <pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate>
      <author>xiaoyun@looseleafapp.com (Xiaoyun Yang)</author>
      <guid>http://xiaoyunyang.github.io/post/everything-you-need-to-know-about-git/</guid>
      <description>&lt;p&gt;This is a cheatsheet of all the git commands that I&amp;rsquo;ve ever used in my career as a programmer and contributor of open source projects. I&amp;rsquo;m not a git power user (I use about three commands on a daily basis). From time to time, I still use this cheatsheet to for a quick lookup of a special command.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Let&#39;s Get Productive With JavaScript</title>
      <link>http://xiaoyunyang.github.io/post/lets-get-productive-with-javascript/</link>
      <pubDate>Thu, 08 Feb 2018 00:00:00 +0000</pubDate>
      <author>xiaoyun@looseleafapp.com (Xiaoyun Yang)</author>
      <guid>http://xiaoyunyang.github.io/post/lets-get-productive-with-javascript/</guid>
      <description>&lt;p&gt;JavaScript is one of the most popular and versatile languages today. You can build anything in JavaScript: from full stack web apps, to cross platform mobile apps, to cross platform desktop apps. Here are some useful algorithms and syntax in JavaScript to help you be productive in JavaScript right away. No set up necessary. Just  open up your browser&amp;rsquo;s console (hit &lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;C&lt;/code&gt; if you are using Chrome and Mac) and start typing.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>