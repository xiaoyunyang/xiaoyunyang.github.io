<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guide on Xiaoyun Yang</title>
    <link>http://xiaoyunyang.github.io/tags/guide/</link>
    <description>Recent content in Guide on Xiaoyun Yang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>xiaoyun@looseleafapp.com (Xiaoyun Yang)</managingEditor>
    <webMaster>xiaoyun@looseleafapp.com (Xiaoyun Yang)</webMaster>
    <lastBuildDate>Mon, 23 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://xiaoyunyang.github.io/tags/guide/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Principles To Code By: How To Solve Problems With Code</title>
      <link>http://xiaoyunyang.github.io/post/principles-to-code-by-how-to-solve-problems-with-code/</link>
      <pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate>
      <author>xiaoyun@looseleafapp.com (Xiaoyun Yang)</author>
      <guid>http://xiaoyunyang.github.io/post/principles-to-code-by-how-to-solve-problems-with-code/</guid>
      <description>&lt;p&gt;What I love most about programming is the problem solving. I don&amp;rsquo;t believe anyone is born with problem solving skills. It&amp;rsquo;s a muscle that is built and sustained by repeated exercise. Like any exercise, there&amp;rsquo;s a set of guidelines to help you be more effective at developing your problem solving muscles. I will introduce 5 of the most important software design principles that have guided my problem solving process and show you how to apply these principles to solve a real problem.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>An Interview Study Guide For Overachievers</title>
      <link>http://xiaoyunyang.github.io/post/an-interview-study-guide-for-overachievers/</link>
      <pubDate>Fri, 20 Apr 2018 00:00:00 +0000</pubDate>
      <author>xiaoyun@looseleafapp.com (Xiaoyun Yang)</author>
      <guid>http://xiaoyunyang.github.io/post/an-interview-study-guide-for-overachievers/</guid>
      <description>&lt;p&gt;Nothing strikes more anxiety and self-doubt than the dreaded job interview. The thought of participating in an activity designed for the sole purpose of evaluating your worth and the potential for rejection is enough to discourage many people from applying to jobs for which they lack all of the qualifications requested by the job posting. While qualification is important to accomplish the advertised job, it is not everything an employer looks for in a person they want to hire to be a part of the team, to grow with the company and help the company grow. The goal of this article is to provide a guide based on my personal experience for how to prepare for getting offers from jobs for which you don&amp;rsquo;t have all the qualifications.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Problem Solving Using JavaScript</title>
      <link>http://xiaoyunyang.github.io/post/problem-solving-using-javascript/</link>
      <pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate>
      <author>xiaoyun@looseleafapp.com (Xiaoyun Yang)</author>
      <guid>http://xiaoyunyang.github.io/post/problem-solving-using-javascript/</guid>
      <description>&lt;p&gt;JavaScript is one of the most popular and versatile languages today, but when Brandon Eich first created JavaScript in 1995, it was not recognized as a general purpose programming language. JavaScript only ran in the browser and was primarily used to enhance the user interfaces of website (e.g., animation, effects upon hover), thus tightly coupled with the Data Object Model (DOM). In recent years, JavaScript has gotten a lot more useful as a general purpose language as it can be run independently from the DOM and browser. Additionally, JavaScript has also has gotten very sophisticated with the introduction of ES6 and ES7. With that, let&amp;rsquo;s take a look at how JavaScript can be used to solve fundamental problems in computer science. Specifically, let&amp;rsquo;s look at how to write algorithms and leverage data structures to help us solve problems using JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Everything You Need To Know About Git</title>
      <link>http://xiaoyunyang.github.io/post/everything-you-need-to-know-about-git/</link>
      <pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate>
      <author>xiaoyun@looseleafapp.com (Xiaoyun Yang)</author>
      <guid>http://xiaoyunyang.github.io/post/everything-you-need-to-know-about-git/</guid>
      <description>&lt;p&gt;This is a cheatsheet of all the git commands that I&amp;rsquo;ve ever used in my career as a programmer and contributor of open source projects. I&amp;rsquo;m not a git power user (I use about three commands on a daily basis). From time to time, I still use this cheatsheet to for a quick lookup of a special command.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Let&#39;s Get Productive With JavaScript</title>
      <link>http://xiaoyunyang.github.io/post/lets-get-productive-with-javascript/</link>
      <pubDate>Thu, 08 Feb 2018 00:00:00 +0000</pubDate>
      <author>xiaoyun@looseleafapp.com (Xiaoyun Yang)</author>
      <guid>http://xiaoyunyang.github.io/post/lets-get-productive-with-javascript/</guid>
      <description>&lt;p&gt;JavaScript is one of the most popular and versatile languages today. You can build anything in JavaScript: from full stack web apps, to cross platform mobile apps, to cross platform desktop apps. Here are some useful algorithms and syntax in JavaScript to help you be productive in JavaScript right away. No set up necessary. Just  open up your browser&amp;rsquo;s console (hit &lt;code&gt;Cmd&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;C&lt;/code&gt; if you are using Chrome and Mac) and start typing.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>